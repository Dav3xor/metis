MASM Assembler 
-----------------------------------------------------------------------------

addressing modes:
-----------------------------------------------------------------------------
REGA-D        (registers A through D)
REGSP         (stack pointer)
REGIP         (instruction pointer) 
REGBP         (buffer pointer) 
REGERR        (error register)
STACK_PUSH    (push result onto stack)
STACK_POP     (pop src from stack)



comments:
-----------------------------------------------------------------------------

* all comment lines start with an asterisk

* this is a comment
* this is also a comment

this is not a comment


proposed instructions:
-----------------------------------------------------------------------------

WAIT src 

waits for number of microseconds held in src

OPEN src, dest

opens file pointed to by src, includes sockets?  urls?.  leaves file # in dest


CLOSE src

closes file # pointed to by src

READ src (file), dest, maxbytes

WRITE dest (file), data, len

instructions:
-----------------------------------------------------------------------------

ERROR               (no operands)

halts execution, prints an error message to the console.

END                 (no operands)

normal halt of execution (end of program)

NOOP                (no operands)

no operation, empty instruction

JUMP                addr_mode

jump to location held in addr_mode

JUMPI               location 

jump to location held in instruction

JIZZ                src, dest

if value in src is zero, jump to dest

JNZ                 src, dest

if value in src is not zero, jump to dest

JNE                 src, dest, val

if value in src does not equal value in dest, jump to val

JMPE                src, dest, val

if value in src equals value in dest, jump to val

STORE               src, dest

copy value in src, put it in dest

STOREI              dest, val



STORESR             src, offset

LOADSR              offset, dest

STACK_ADJ           amount

LOC                 label

LABEL               label, val

FLOAT               label, val

BUFFER              label, size, values

MATRIX              label, width, height, values

SHADER              label <shader> END-SHADER

IMATRIX             label, width, height

MPUSH               location

MMUL                src1, src2, dest

MADD                src1, src2, dest

VDOT                src1, src2, dest

VCROSS              src1, src2, dest

GLDRAWELEMENTS      mode, count, type, indices

GLDRAWARRAYS        mode, first, count

GLGENBUFFERS        numids, start

GLGENVERTEXARRAYS   numids, start

GLBINDVERTEXARRAY   id

GLBINDBUFFER        target, id

GLBUFFERDATA        target, size, data_index, usage

GLENABLEVERTEXATTRIBARRAY       index

GLVERTEXATTRIBPOINTER           index, size, type, normalized, stride, pointer

GLDISABLEVERTEXATTRIBARRAY      index

GLENABLE                        capability

GLDEPTHFUNC                     function

GLCREATESHADER                  type, index

GLSHADERSOURCE                  shader, index

GLCOMPILESHADER                 index

GLCREATEPROGRAM                 index

GLATTACHSHADER                  program_index, shader_index

GLLINKPROGRAM                   index

GLDETACHSHADER                  program_index, shader_index

GLDELETESHADER                  shader_index

GLUSEPROGRAM                    program_index

GLUNIFORMFV                     src, uniform_index

GLUNIFORMIV                     src, uniform_index

GLUNIFORMUIV                    src, uniform_index

GLUNIFORMMATRIXFV               src, uniform_index

GLGETUNIFORMLOCATION            program_index, uniform_index uniform_name

GLGENTEXTURES                   num_identifiers, start_index

GLBINDTEXTURE                   target, texture_index

GLTEXPARAMETERI                 target, pname, param

GLTEXPARAMETERFV                src, target, pname

GLGENERATEMIPMAP                target

GLTEXIMAGE2D                    target, level, internal_format, width, height, border, format, type, data_index

GLGETATTRIBLOCATION             attrib_index, attrib

GLACTIVETEXTURE                 texture

GLCLEAR                         bitfield

GLCLEARCOLOR                    r,g,b,a

NOT
INC
DEC
ADD
SUB
MUL
DIV
MOD
AND
OR
XOR
  }),
